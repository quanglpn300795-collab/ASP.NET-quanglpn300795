{"version":3,"sources":["../../src/googleai/veo.ts"],"sourcesContent":["/**\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionMetadata,\n  GenerateResponseData,\n  Operation,\n  modelActionMetadata,\n  z,\n  type Genkit,\n} from 'genkit';\nimport {\n  BackgroundModelAction,\n  modelRef,\n  type GenerateRequest,\n  type ModelInfo,\n  type ModelReference,\n} from 'genkit/model';\nimport { veoCheckOperation, veoPredict } from './client.js';\nimport {\n  ClientOptions,\n  GoogleAIPluginOptions,\n  Model,\n  VeoOperation,\n  VeoParameters,\n  VeoPredictRequest,\n} from './types.js';\nimport {\n  calculateApiKey,\n  checkModelName,\n  extractText,\n  extractVeoImage,\n  extractVersion,\n  modelName,\n} from './utils.js';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/video\n */\nexport const VeoConfigSchema = z\n  .object({\n    // NOTE: Documentation notes numberOfVideos parameter to pick the number of\n    // output videos, but this setting does not seem to work\n    negativePrompt: z.string().optional(),\n    aspectRatio: z\n      .enum(['9:16', '16:9'])\n      .describe('Desired aspect ratio of the output video.')\n      .optional(),\n    personGeneration: z\n      .enum(['dont_allow', 'allow_adult', 'allow_all'])\n      .describe(\n        'Control if/how images of people will be generated by the model.'\n      )\n      .optional(),\n    durationSeconds: z\n      .number()\n      .step(1)\n      .min(5)\n      .max(8)\n      .describe('Length of each output video in seconds, between 5 and 8.')\n      .optional(),\n    enhancePrompt: z\n      .boolean()\n      .describe('Enable or disable the prompt rewriter. Enabled by default.')\n      .optional(),\n  })\n  .passthrough();\nexport type VeoConfigSchemaType = typeof VeoConfigSchema;\nexport type VeoConfig = z.infer<VeoConfigSchemaType>;\n\n// This contains all the Veo config schema types\ntype ConfigSchemaType = VeoConfigSchemaType;\n\nfunction commonRef(\n  name: string,\n  info?: ModelInfo,\n  configSchema: ConfigSchemaType = VeoConfigSchema\n): ModelReference<ConfigSchemaType> {\n  return modelRef({\n    name: `googleai/${name}`,\n    configSchema,\n    info:\n      info ??\n      ({\n        supports: {\n          media: true,\n          multiturn: false,\n          tools: false,\n          systemRole: false,\n          output: ['media'],\n          longRunning: true,\n        },\n      } as ModelInfo), // TODO(ifielker): Remove this cast if we fix longRunning\n  });\n}\n\nconst GENERIC_MODEL = commonRef('veo');\n\nconst KNOWN_MODELS = {\n  'veo-3.0-generate-preview': commonRef('veo-3.0-generate-preview'),\n  'veo-3.0-fast-generate-preview': commonRef('veo-3.0-fast-generate-preview'),\n  'veo-2.0-generate-001': commonRef('veo-2.0-generate-001'),\n} as const;\nexport type KnownModels = keyof typeof KNOWN_MODELS; // For autocomplete\nexport type VeoModelName = `veo-${string}`;\nexport function isVeoModelName(value?: string): value is VeoModelName {\n  return !!value?.startsWith('veo-');\n}\n\nexport function model(\n  version: string,\n  config: VeoConfig = {}\n): ModelReference<ConfigSchemaType> {\n  const name = checkModelName(version);\n  return modelRef({\n    name: `googleai/${name}`,\n    config,\n    configSchema: VeoConfigSchema,\n    info: { ...GENERIC_MODEL.info },\n  });\n}\n\n// Takes a full list of models, filters for current Veo models only\n// and returns a modelActionMetadata for each.\nexport function listActions(models: Model[]): ActionMetadata[] {\n  return (\n    models\n      .filter(\n        (m) =>\n          m.supportedGenerationMethods.includes('predictLongRunning') &&\n          isVeoModelName(modelName(m.name))\n      )\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const ref = model(m.name);\n        return modelActionMetadata({\n          name: ref.name,\n          info: ref.info,\n          configSchema: ref.configSchema,\n        });\n      })\n  );\n}\n\nexport function defineKnownModels(ai: Genkit, options?: GoogleAIPluginOptions) {\n  for (const name of Object.keys(KNOWN_MODELS)) {\n    defineModel(ai, name, options);\n  }\n}\n\n/**\n * Defines a new GoogleAI Veo model.\n */\nexport function defineModel(\n  ai: Genkit,\n  name: string,\n  pluginOptions?: GoogleAIPluginOptions\n): BackgroundModelAction<VeoConfigSchemaType> {\n  const ref = model(name);\n  const clientOptions: ClientOptions = {\n    apiVersion: pluginOptions?.apiVersion,\n    baseUrl: pluginOptions?.baseUrl,\n  };\n\n  return ai.defineBackgroundModel({\n    name: ref.name,\n    ...ref.info,\n    configSchema: ref.configSchema,\n    async start(request) {\n      const apiKey = calculateApiKey(pluginOptions?.apiKey, undefined);\n      const veoPredictRequest: VeoPredictRequest = {\n        instances: [\n          {\n            prompt: extractText(request),\n            image: extractVeoImage(request),\n          },\n        ],\n        parameters: toVeoParameters(request),\n      };\n\n      const response = await veoPredict(\n        apiKey,\n        extractVersion(ref),\n        veoPredictRequest,\n        clientOptions\n      );\n\n      return fromVeoOperation(response);\n    },\n    async check(operation) {\n      const apiKey = calculateApiKey(pluginOptions?.apiKey, undefined);\n      const response = await veoCheckOperation(\n        apiKey,\n        operation.id,\n        clientOptions\n      );\n      return fromVeoOperation(response);\n    },\n  });\n}\n\nfunction toVeoParameters(\n  request: GenerateRequest<VeoConfigSchemaType>\n): VeoParameters {\n  const out = {\n    ...request?.config,\n  };\n\n  for (const k in out) {\n    // undefined is handled by JSON.stringify\n    // false is needed so we can set enhancePrompt to false\n    if (out[k] === null) delete out[k];\n  }\n\n  // This is not part of the request parameters sent to the endpoint\n  // It's pulled out and used separately\n  delete out.apiKey;\n\n  // This was used to help us figure out which model. We no longer need\n  // it here.\n  delete out.version;\n\n  return out;\n}\n\nfunction fromVeoOperation(\n  apiOp: VeoOperation\n): Operation<GenerateResponseData> {\n  const res = { id: apiOp.name } as Operation<GenerateResponseData>;\n  if (apiOp.done !== undefined) {\n    res.done = apiOp.done;\n  }\n\n  if (apiOp.error) {\n    res.error = { message: apiOp.error.message };\n  }\n\n  if (\n    apiOp.response &&\n    apiOp.response.generateVideoResponse &&\n    apiOp.response.generateVideoResponse.generatedSamples\n  ) {\n    res.output = {\n      finishReason: 'stop',\n      raw: apiOp.response,\n      message: {\n        role: 'model',\n        content: apiOp.response.generateVideoResponse.generatedSamples.map(\n          (s) => {\n            return {\n              media: {\n                url: s.video.uri,\n              },\n            };\n          }\n        ),\n      },\n    };\n  }\n\n  return res;\n}\n\nexport const TEST_ONLY = {\n  toVeoParameters,\n  fromVeoOperation,\n  GENERIC_MODEL,\n  KNOWN_MODELS,\n};\n"],"mappings":"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","names":[]}